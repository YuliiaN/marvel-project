{"version":3,"file":"static/js/129.99af41bc.chunk.js","mappings":"6RAwFA,UA7Ee,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAA8BN,EAAAA,EAAAA,WAAS,GAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KAJmB,SAcJC,EAdI,0EAcnB,WAA8BN,GAA9B,gGAEsBO,EAAAA,EAAAA,aAAiBP,GAFvC,OAEUQ,EAFV,OAIIT,GAAU,SAAAU,GACR,OAAQT,EAAD,kBAAoBS,IAApB,OAAmCD,IAAzBA,CAClB,IACDH,GAAW,GAPf,gDASIK,QAAQC,IAAI,KAAMC,SAClBP,GAAW,GAVf,yDAdmB,yBAMnBQ,EAAAA,EAAAA,YAAU,WACRP,GACD,GAAE,KAEHO,EAAAA,EAAAA,YAAU,WACRP,EAAeN,EAChB,GAAE,CAACA,IAoBJ,OACE,oBAASc,MAAO,CAAEC,QAAS,eAA3B,UACE,UAAC,IAAD,WACGX,IAAW,SAAC,IAAD,MACTN,EAAOkB,SAAWZ,IACnB,iCACE,eAAIa,UAAWC,EAAAA,EAAAA,KAAf,SACGpB,EAAOqB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,OAAzB,OACV,eAAmBN,UAAWC,EAAAA,EAAAA,KAA9B,UACE,UAAC,KAAD,CACEM,GAAE,WAAMC,EAAAA,EAAAA,OAAN,YAAuBL,GACzBM,MAAO,CAAEC,KAAMzB,GAFjB,WAIE,gBACEe,UAAWC,EAAAA,EAAAA,IACXU,IAAG,UAAKN,EAAUO,KAAf,YAAuBP,EAAUQ,WACpCC,IAAKV,KAEP,eAAIJ,UAAWC,EAAAA,EAAAA,SAAf,SAA8BG,KAC9B,cAAGJ,UAAWC,EAAAA,EAAAA,MAAd,SACGK,EAAO,GAAGS,MAAV,UACMT,EAAO,GAAGS,MADhB,KAEG,uBAdDC,EAAAA,EAAAA,MADC,OAqBd,SAAC,KAAD,CACEnB,MAAO,CACLoB,QAAS,QACTC,MAAO,QACPC,OAAQ,eAEVC,QAtCQ,WAClBpC,GAAU,SAAAqC,GAAS,OAAIA,EAAY,EAAhB,GACpB,EA8BS,UAQE,SAAC,KAAD,0BACS,WAMtB,C","sources":["views/Comics/Comics.js"],"sourcesContent":["import css from './Comics.module.css';\nimport ContainerStyled from 'components/Container/Container.styled';\nimport { HeroBtn, BtnInner } from 'components/Hero/Hero.styled';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { useState, useEffect } from 'react';\nimport { api } from 'components/Hero/Hero';\nimport { nanoid } from 'nanoid';\nimport { useLocation } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\n\nconst Comics = () => {\n  const [comics, setComics] = useState([]);\n  const [offset, setOffset] = useState(0);\n  const location = useLocation();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchAllComics();\n  }, []);\n\n  useEffect(() => {\n    fetchAllComics(offset);\n  }, [offset]);\n\n  async function fetchAllComics(offset) {\n    try {\n      const res = await api.getAllComics(offset);\n      // setComics(prevData => (prevData.length ? [...comics, ...res] : [...res]));\n      setComics(prevComics => {\n        return !offset ? res : [...prevComics, ...res];\n      });\n      setLoading(false);\n    } catch (error) {\n      console.log(error.message);\n      setLoading(false);\n    }\n  }\n\n  const handleClick = () => {\n    setOffset(prevState => prevState + 12);\n  };\n\n  return (\n    <section style={{ padding: '45px 0 50px' }}>\n      <ContainerStyled>\n        {loading && <Loader />}\n        {!!comics.length && !loading && (\n          <>\n            <ul className={css.list}>\n              {comics.map(({ id, title, thumbnail, prices }) => (\n                <li key={nanoid()} className={css.item}>\n                  <Link\n                    to={`/${routes.COMICS}/${id}`}\n                    state={{ from: location }}\n                  >\n                    <img\n                      className={css.img}\n                      src={`${thumbnail.path}.${thumbnail.extension}`}\n                      alt={title}\n                    />\n                    <h2 className={css.subtitle}>{title}</h2>\n                    <p className={css.price}>\n                      {prices[0].price\n                        ? `${prices[0].price}$`\n                        : 'not available'}\n                    </p>\n                  </Link>\n                </li>\n              ))}\n            </ul>\n            <HeroBtn\n              style={{\n                display: 'block',\n                width: '170px',\n                margin: '45px auto 0',\n              }}\n              onClick={handleClick}\n            >\n              <BtnInner>Load more</BtnInner>\n            </HeroBtn>{' '}\n          </>\n        )}\n      </ContainerStyled>\n    </section>\n  );\n};\n\nexport default Comics;\n"],"names":["useState","comics","setComics","offset","setOffset","location","useLocation","loading","setLoading","fetchAllComics","api","res","prevComics","console","log","message","useEffect","style","padding","length","className","css","map","id","title","thumbnail","prices","to","routes","state","from","src","path","extension","alt","price","nanoid","display","width","margin","onClick","prevState"],"sourceRoot":""}